- name: Create backup directory
  ansible.builtin.file:
    path: "{{ freshrss_backup_dir }}"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Setup user backup job (every day at 12:55 AM)
  ansible.builtin.cron:
    name: "Create backup"
    weekday: "*"
    hour: "0"
    minute: "55"
    user: root
    job: "tar -zcf \"{{ freshrss_backup_dir }}/$(date +'\\%Y-\\%m-\\%d_\\%H-\\%M-\\%S').tar.gz\" -C {{ freshrss_install_dir }} data/ && curl -fsS -m 10 --retry 5 -o /dev/null 'https://hc-ping.com/baf6b517-5996-4cb2-95a4-f67623f90797'"

- name: Setup DB backup cronjob (every day at 1AM)
  ansible.builtin.cron:
    name: MySQL Backup
    weekday: "*"
    hour: "1"
    minute: "0"
    user: root
    job: "mysqldump --skip-comments --user=root --password='{{ mysql.root }}' --all-databases > \"{{ freshrss_backup_dir }}/$(date +'\\%Y-\\%m-\\%d_\\%H-\\%M-\\%S').sql\" && curl -fsS -m 10 --retry 5 -o /dev/null 'https://hc-ping.com/f0aadcfa-027e-40f7-a672-f5a59895ecc5'"

- name: Setup cleanup job (every day at 00:01 AM)
  ansible.builtin.cron:
    name: Cleanup backups
    job: "cd /backups && for file in *; do [ \"$(echo $file | cut -d'_' -f1)\" \\< \"$(date -d \"3 days ago\" +\\%Y-\\%m-\\%d)\" ] && rm \"$file\" && curl -fsS -m 10 --retry 5 -o /dev/null https://hc-ping.com/75cab855-7140-46b1-bf6a-16ff02be913c\"; done"
    weekday: "*"
    hour: "0"
    minute: "01"
    user: root

- name: Create restore tool
  ansible.builtin.template:
    src: restore.sh.j2
    dest: /bin/freshrss_restore
    owner: root
    group: root
    mode: "0701"
